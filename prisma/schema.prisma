

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  isVerified    Boolean   @default(false)
  role          Role      @default(JOBSEEKER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profile       UserProfile?
  applications  JobApplication[]
}

model UserProfile {
  id            Int       @id @default(autoincrement())
  userId        Int       @unique
  user          User      @relation(fields: [userId], references: [id])
  firstName     String
  lastName      String
  profession    String?
  bio           String?
  skills        String[]
  experience   String[] 
  education     String[] 
  achievements  String[]
  socialLinks   String[]
}

model Company {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  isVerified    Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  profile       CompanyProfile?
  jobs          Job[]
}

model CompanyProfile {
  id            Int       @id @default(autoincrement())
  companyId     Int       @unique
  company       Company   @relation(fields: [companyId], references: [id])
  name          String
  description   String?
  industry      String?
  size          String?
  foundedYear   Int?
  website       String?
  location      String?
  logo          String?
  socialLinks   String[]
}

model Job {
  id            Int       @id @default(autoincrement())
  companyId     Int
  company       Company   @relation(fields: [companyId], references: [id])
  title         String
  description   String
  requirements  String[]
  salary        String?
  location      String?
  type          JobType
  experience    String
  endDate       DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  applications  JobApplication[]
}

model JobApplication {
  id            Int       @id @default(autoincrement())
  userId        Int
  user          User      @relation(fields: [userId], references: [id])
  jobId         Int
  job           Job       @relation(fields: [jobId], references: [id])
  status        ApplicationStatus @default(PENDING)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

 
 

enum Role {
  ADMIN
  JOBSEEKER
  COMPANY
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
  INTERNSHIP
  FREELANCE
}

enum ApplicationStatus {
  PENDING
  REVIEWED
  INTERVIEWED
  OFFERED
  REJECTED
}